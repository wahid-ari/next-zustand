import Head from 'next/head'
import Navbar from '@components/Navbar';
import { useFruitStore } from '@store/useStore';
import { useRef } from 'react';
import Code from '@components/Code';

export default function Fruit() {

  const fruits = useFruitStore((state) => state.fruits);
  const addFruit = useFruitStore((state) => state.addFruit);
  const removeFruit = useFruitStore((state) => state.removeFruit);
  const removeAllFruits = useFruitStore((state) => state.removeAllFruits);
  const restoreAllFruits = useFruitStore((state) => state.restoreAllFruits);
  const inputFruitRef = useRef()
  function handleAddFruit() {
    const value = inputFruitRef.current.value
    if (value !== "") addFruit(value)
    else alert("input cannot empty !")
    inputFruitRef.current.value = "";
  }

  return (
    <>
      <Head>
        <title>Default Zustand</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark:bg-neutral-900 min-h-screen pb-8">

        <Navbar />

        <div className="max-w-5xl px-4 mx-auto pt-4 class">
          <h1 className="dark:text-white text-2xl font-semibold">Fruits Data üçè üçå üçä</h1>

          <div className="my-8">
            <ul className="dark:text-white my-2">
              {fruits.map(fruit =>
                <li key={fruit + 1}>{fruit}</li>
              )}
            </ul>
            <span className="mt-2 dark:text-white">{fruits.length} fruits available</span>
            <p className="dark:text-white my-2">Add a new fruit</p>
            <div className="mb-2">
              <input ref={inputFruitRef} className="px-1.5 mr-2 h-7 border border-gray-300 dark:border-neutral-700 rounded bg-gray-100 dark:bg-neutral-800 dark:text-white focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500" />
              <button onClick={handleAddFruit} className={`bg-blue-500 hover:bg-blue-600 transition-all cursor-pointer text-white rounded py-1 px-2 text-sm mr-2`}>add fruit</button>
            </div>
            <button onClick={removeFruit} className={`bg-red-500 hover:bg-red-600 transition-all cursor-pointer text-white rounded py-1 px-2 text-sm mr-2`}>remove last</button>
            <button onClick={removeAllFruits} className="bg-orange-500 hover:bg-orange-600 transition-all cursor-pointer text-white rounded py-1 px-2 text-sm mr-2">remove all</button>
            <button onClick={restoreAllFruits} className="bg-teal-500 hover:bg-teal-600 transition-all cursor-pointer text-white rounded py-1 px-2 text-sm mr-2">restore all</button>
          </div>

          <Code name="store/useStore" code={`import create from 'zustand';
          
export const useFruitStore = create(set => ({
  fruits: ['apple üçè', 'banana üçå', 'orange üçä'],
  addFruit: (fruit) => {
    set(state => ({
      fruits: [...state.fruits, fruit]
    }));
  },
  removeFruit: () => {
    set(state => ({
      fruits: state.fruits.slice(0, -1)
    }));
  },
  removeAllFruits: () => set({ fruits: [] }),
  restoreAllFruits: () => set({ fruits: ['apple üçè', 'banana üçå', 'orange üçä'] })
}));`} />

          <Code name="pages/fruit" code={`import { useFruitStore } from '@store/useStore';
import { useRef } from 'react';

export default function Fruit() {

  const fruits = useFruitStore((state) => state.fruits);
  const addFruit = useFruitStore((state) => state.addFruit);
  const removeFruit = useFruitStore((state) => state.removeFruit);
  const removeAllFruits = useFruitStore((state) => state.removeAllFruits);
  const restoreAllFruits = useFruitStore((state) => state.restoreAllFruits);
  const inputFruitRef = useRef()
  function handleAddFruit() {
    const value = inputFruitRef.current.value
    if (value !== "") addFruit(value)
    else alert("input cannot empty !")
    inputFruitRef.current.value = "";
  }

  return (
    <ul>
      {fruits.map(fruit =>
        <li key={fruit + 1}>{fruit}</li>
      )}
    </ul>
    <span>{fruits.length} fruits available</span>
    <p>Add a new fruit</p>
    <div>
      <input ref={inputFruitRef}/>
      <button onClick={handleAddFruit}>add fruit</button>
    </div>
    <button onClick={removeFruit}>remove last</button>
    <button onClick={removeAllFruits}>remove all</button>
    <button onClick={restoreAllFruits}>restore all</button>
  )
}`} />

        </div>
      </main >
    </>
  )
}
